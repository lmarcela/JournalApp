{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNode","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeid","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d0432ec6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBbpslB4ust5scIx4G-po5hS8ob9JwKcCk\",\r\n  authDomain: \"react-app-pruebas.firebaseapp.com\",\r\n  databaseURL: \"https://react-app-pruebas.firebaseio.com\",\r\n  projectId: \"react-app-pruebas\",\r\n  storageBucket: \"react-app-pruebas.appspot.com\",\r\n  messagingSenderId: \"369508618314\",\r\n  appId: \"1:369508618314:web:0c75fb1aa0dbfac67756b3\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","export const types = {\r\n  login: \"[Auth] Login\",\r\n  logout: \"[Auth] Logout\",\r\n\r\n  uiSetError: \"[UI] Set Error\",\r\n  uiRemoveError: \"[UI] Remove Error\",\r\n  uiStartLoading: \"[UI] Start loading\",\r\n  uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n  notesAddNew: \"[Notes] New note\",\r\n  notesActive: \"[Notes] Set active note\",\r\n  notesLoad: \"[Notes] Load note\",\r\n  notesUpdated: \"[Notes] Updated note\",\r\n  notesFileUrl: \"[Notes] Update image url\",\r\n  notesDelete: \"[Notes] Delete note\",\r\n  notesLogoutCleaning: \"[Notes] Logout Cleaning\",\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err,\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n  const notes = [];\r\n  notesSnap.forEach((snapHijo) => {\r\n    notes.push({\r\n      id: snapHijo.id,\r\n      ...snapHijo.data(),\r\n    });\r\n  });\r\n  return notes;\r\n};\r\n","export const fileUpload =async(file)=>{\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/marcela/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        throw error; \r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth; //const uid = getState().auth.uid;\r\n\r\n    const newNote = {\r\n      title: \"\",\r\n      body: \"\",\r\n      date: new Date().getTime(),\r\n    };\r\n\r\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n    dispatch(activeNote(doc.id, newNote));\r\n    dispatch(addNewNote(doc.id, newNote));\r\n  };\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n  type: types.notesActive,\r\n  payload: {\r\n    id,\r\n    ...note,\r\n  },\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n  type: types.notesAddNew,\r\n  payload: {\r\n    id,\r\n    note,\r\n  },\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n  return async (dispatch) => {\r\n    const notes = await loadNotes(uid);\r\n    dispatch(setNotes(notes));\r\n  };\r\n};\r\n\r\nexport const setNotes = (notes) => ({\r\n  type: types.notesLoad,\r\n  payload: notes,\r\n});\r\n\r\nexport const startSaveNode = (note) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth;\r\n\r\n    if (!note.url) {\r\n      delete note.url;\r\n    }\r\n\r\n    const noteToFirestore = { ...note };\r\n    delete noteToFirestore.id;\r\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n    dispatch(refreshNote(note.id, noteToFirestore));\r\n    Swal.fire(\"Saved\", note.title, \"success\");\r\n  };\r\n};\r\n\r\nexport const refreshNote = (id, note) => ({\r\n  type: types.notesUpdated,\r\n  payload: {\r\n    id,\r\n    note: {\r\n      id,\r\n      ...note,\r\n    },\r\n  },\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n  return async (dispatch, getState) => {\r\n    const { active: activeNote } = getState().notes;\r\n    Swal.fire({\r\n      title: \"Uploading...\",\r\n      text: \"Please wait...\",\r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n    const fileUrl = await fileUpload(file);\r\n    activeNote.url = fileUrl;\r\n    dispatch(startSaveNode(activeNote));\r\n    Swal.close();\r\n  };\r\n};\r\n\r\nexport const startDeleting = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n    dispatch(deleteNote(id));\r\n  };\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n  type: types.notesDelete,\r\n  payload: id,\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n  type: types.notesLogoutCleaning,\r\n});\r\n","import Swal from \"sweetalert2\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n        dispatch(finishLoading());\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.message);\r\n        dispatch(finishLoading());\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: name });\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName) => {\r\n  return {\r\n    type: types.login,\r\n    payload: {\r\n      uid,\r\n      displayName,\r\n    },\r\n  };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n    dispatch(logout());\r\n    dispatch(noteLogout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: types.logout,\r\n});\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { startLoginEmailPassword, startGoogleLogin } from \"../../actions/auth\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.ui);\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"marcela19409@gmail.com\",\r\n    password: \"123456\",\r\n  });\r\n  const { email, password } = formValues;\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Login</h3>\r\n      <form\r\n        onSubmit={handleLogin}\r\n        className=\"animate__animated animate__fadeIn animate__faster\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button\r\n          className=\"btn btn-primary btn-block\"\r\n          type=\"submit\"\r\n          disabled={loading}\r\n        >\r\n          Login\r\n        </button>\r\n\r\n        <div className=\"auth__social-networks\">\r\n          <p>Login with social networks</p>\r\n\r\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/auth/register\" className=\"link\">\r\n          Create new account\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport validator from \"validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { setError, removeError } from \"../../actions/ui\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { msgError } = useSelector((state) => state.ui);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: \"Lina\",\r\n    email: \"marcela19409@gmail.com\",\r\n    password: \"123456\",\r\n    password2: \"123456\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(setError(\"Name is required\"));\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      dispatch(setError(\"Email is not valid\"));\r\n      return false;\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch(\r\n        setError(\r\n          \"Password should be at least 6 characters and match each other\"\r\n        )\r\n      );\r\n      return false;\r\n    }\r\n\r\n    dispatch(removeError());\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Register</h3>\r\n      <form onSubmit={handleRegister} className='animate__animated animate__fadeIn animate__faster'>\r\n        {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"password2\"\r\n          className=\"auth__input\"\r\n          value={password2}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button className=\"btn btn-primary btn-block mb-5\" type=\"submit\">\r\n          Register\r\n        </button>\r\n\r\n        <Link to=\"/auth/login\" className=\"link\">\r\n          Already registered?\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className=\"auth__main\">\r\n      <div className=\"auth__box-container\">\r\n        <Switch>\r\n          <Route exact path=\"/auth/login\" component={LoginScreen}></Route>\r\n          <Route exact path=\"/auth/register\" component={RegisterScreen}></Route>\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activeNote } from \"../../actions/notes\";\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n  const dispatch = useDispatch();\r\n  const noteDate = moment(date);\r\n  const handleEntryClick = () => {\r\n    dispatch(\r\n      activeNote(id, {\r\n        date,\r\n        title,\r\n        body,\r\n        url,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n      onClick={handleEntryClick}\r\n    >\r\n      {url && (\r\n        <div\r\n          className=\"journal__entry-picture\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(${url})`,\r\n          }}\r\n        ></div>\r\n      )}\r\n      <div className=\"journal__entry-body\">\r\n        <p className=\"journal__entry-title\">{title}</p>\r\n        <p className=\"journal__entry-content\">{body}</p>\r\n      </div>\r\n      <div className=\"journal__entry-box\">\r\n        <span>{noteDate.format(\"dddd\")}</span>\r\n        <h4>{noteDate.format(\"Do\")}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { JournalEntry } from \"./JournalEntry\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const JournalEntries = () => {\r\n  const { notes } = useSelector((state) => state.notes);\r\n  return (\r\n    <div className=\"journal__entries\">\r\n      {notes.map((note) => (\r\n        <JournalEntry key={note.id} {...note} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { JournalEntries } from \"./JournalEntries\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { startNewNote } from \"../../actions/notes\";\r\n\r\nexport const Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    dispatch(startNewNote());\r\n  };\r\n\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <aside className=\"journal__sidebar\">\r\n      <div className=\"journal__sidebar-navbar\">\r\n        <h3 className=\"mt-5\">\r\n          <i className=\"far fa-moon\" />\r\n          <span>{name}</span>\r\n        </h3>\r\n        <button className=\"btn\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"journal__new-entry\" onClick={handleAddNew}>\r\n        <i className=\"far fa-calendar-plus fa-5x\" />\r\n        <p className=\"mt-5\">New entry</p>\r\n      </div>\r\n\r\n      <JournalEntries />\r\n    </aside>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startSaveNode, startUploading } from \"../../actions/notes\";\r\n\r\nexport const NotesAppBar = () => {\r\n  const dispatch = useDispatch();\r\n  const { active } = useSelector((state) => state.notes);\r\n  const handleSave = () => {\r\n    dispatch(startSaveNode(active));\r\n  };\r\n  const handlePictureClick = () => {\r\n    document.querySelector('#fileSelector').click();\r\n  }\r\n  const handleFileChange = (e) => {\r\n    const file=e.target.files[0];\r\n    if(file){\r\n      dispatch(startUploading(file));\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"notes__appbar\">\r\n      <span>JournalApp</span>\r\n      <input id='fileSelector' name='file' type='file' style={{display: 'none'}} onChange={handleFileChange}/>\r\n      <div>\r\n        <button className=\"btn\" onClick={handlePictureClick}>Picture</button>\r\n        <button className=\"btn\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//react-journal https://api.cloudinary.com/v1_1/marcela/upload","import React, { useEffect, useRef } from \"react\";\r\nimport { NotesAppBar } from \"./NotesAppBar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { activeNote, startDeleting } from \"../../actions/notes\";\r\n\r\nexport const NoteScreen = () => {\r\n  const { active: note } = useSelector((state) => state.notes);\r\n  const [formValues, handleInputChange, reset] = useForm(note);\r\n  const { body, title, id } = formValues;\r\n  const activeid = useRef(note.id);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (note.id !== activeid.current) {\r\n      reset(note);\r\n      activeid.current = note.id;\r\n    }\r\n  }, [note, reset]);\r\n\r\n  useEffect(() => {\r\n    dispatch(activeNote(formValues.id, { ...formValues }));\r\n  }, [formValues, dispatch]);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startDeleting(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes__main-content\">\r\n      <NotesAppBar />\r\n      <div className=\"notes__content\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Some awesome title\"\r\n          className=\"notes__title-input\"\r\n          autoComplete=\"off\"\r\n          name=\"title\"\r\n          value={title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          placeholder=\"What happened today\"\r\n          className=\"notes__text-area\"\r\n          name=\"body\"\r\n          value={body}\r\n          onChange={handleInputChange}\r\n        ></textarea>\r\n        {note.url && (\r\n          <div className=\"notes__image\">\r\n            <img src={note.url} alt=\"imagen\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button className=\"btn btn-danger\" onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const NothingSelected = () => {\r\n  return (\r\n    <div className=\"nothing__main-content\">\r\n      <p>\r\n        Select something\r\n        <br />\r\n        create an entry!\r\n      </p>\r\n      <i className=\"far fa-star fa-4x mt-5\"></i>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Sidebar } from \"./Sidebar\";\r\nimport { NoteScreen } from \"../notes/NoteScreen\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NothingSelected } from \"./NothingSelected\";\r\n\r\nexport const JournalScreen = () => {\r\n  const { active } = useSelector((state) => state.notes);\r\n  return (\r\n    <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n      <Sidebar />\r\n      <main>{active ? <NoteScreen /> : <NothingSelected />}</main>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true);\r\n        dispatch(startLoadingNotes(user.uid));\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n  if (checking) {\r\n    return <h1><i className=\"fa fa-spinner fa-spin\" /> Wait...</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <PublicRoute\r\n              path=\"/auth\"\r\n              isAuthenticated={isLoggedIn}\r\n              component={AuthRouter}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/\"\r\n              isAuthenticated={isLoggedIn}\r\n              component={JournalScreen}\r\n            />\r\n            <Redirect to=\"/auth/login\" />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      };\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  active: null,\r\n};\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.notesActive:\r\n      return {\r\n        ...state,\r\n        active: { ...action.payload },\r\n      };\r\n    case types.notesLoad:\r\n      return {\r\n        ...state,\r\n        notes: [...action.payload],\r\n      };\r\n\r\n    case types.notesAddNew:\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes],\r\n      };\r\n\r\n    case types.notesUpdated:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.map((note) =>\r\n          note.id === action.payload.id ? action.payload.note : note\r\n        ),\r\n      };\r\n\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: state.notes.filter((note) => note.id !== action.payload),\r\n      };\r\n\r\n    case types.notesLogoutCleaning:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  notes: notesReducer,\r\n});\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n      };\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const JournalApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}